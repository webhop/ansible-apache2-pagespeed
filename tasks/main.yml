---
- name: Update the apt-cache to remove pagespeed apt from cache
  apt: update_cache=yes cache_valid_time=3600

- name: Install the latest version of the signing key
  apt_key: 
    url: https://dl-ssl.google.com/linux/linux_signing_key.pub 
    state: present

- name: Add Apache2 PPA
  apt_repository:
    repo: 'ppa:ondrej/apache2'
    update_cache: yes

- name: Add Ubuntu Universe Repository
  apt_repository:
    repo: "deb http://eu-central-1.ec2.archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} multiverse"
    update_cache: yes

- name: Install latest version of Apache
  apt:
    name: apache2
    state: latest

- name: Ensure the docroot exists
  file:
    path: "{{ docroot }}"
    state: directory
    owner: www-data
    group: www-data

- name: Install libapache2-mod-fcgid for Ubuntu 18.04
  apt:
    name: libapache2-mod-fcgid
    state: latest
  when: ansible_lsb.major_release|int > 16

- name: Install libapache2-mod-fastcgi for Ubuntu < 18.04
  apt:
    name: libapache2-mod-fastcgi
    state: latest
  when: ansible_lsb.major_release|int <= 16

- name: Enable Apache2 modules
  command: "a2enmod {{ item }}"
  with_items:
    - proxy_fcgi
  when: ansible_lsb.major_release|int > 16

- name: Enable Apache2 PHP-FPM conf
  command: "a2enconf {{ item }}"
  with_items:
    - "php{{ php_version }}-fpm"
  when: ansible_lsb.major_release|int > 16

- name: Disable Apache2 prefork MPM modules
  command: "a2dismod {{ item }}"
  with_items:
    - php5.6
    - php7.0
    - php7.1
    - php7.2
    - php7.3
    - php7.4
    - php8.0
    - mpm_prefork
  register: apache2_module_output
  changed_when: apache2_module_output.stdout.find(item + ' already') == -1
  ignore_errors: true

- name: Enable Apache2 event MPM module
  command: "a2enmod mpm_event"
  register: apache2_module_output
  changed_when: apache2_module_output.stdout.find('mpm_event already') == -1

- name: Check if SSL certificates are installed
  stat:
    path: "/etc/apache2/ssl/cert.pem"
  register: stat_ssl_cert

- name: Enable required apache modules
  apache2_module: name="{{ item }}" state=present
  with_items:
    - actions
    - rewrite
    - headers
    - expires

- name: Enable SSL if there are certs available
  apache2_module: name=ssl state=present
  when: stat_ssl_cert.stat.exists

- name: Enable mod_status apache module
  apache2_module: name=status state=present
  when: enable_mod_status

- name: Check if htaccess file is present
  stat:
    path: "{{ docroot }}/.htaccess"
  register: stat_htaccess

- name: Add override to htaccess file to ensure endpoint is accessible
  lineinfile:
    dest: "{{ docroot }}/.htaccess"
    state: present
    line: "RewriteCond %{REQUEST_URI} !^{{ mod_status_endpoint }}"
    insertbefore: '\s*RewriteRule \D index\.php \[L\]'
  when: stat_htaccess.stat.exists and enable_mod_status

- name: Download Google pagespeed module
  get_url:
    url: "https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-stable_current_amd64.deb"
    dest: "/tmp/pagespeed.deb"

- name: Install Google pagespeed
  apt:
    deb: "/tmp/pagespeed.deb"

- name: Delete 000-default.conf
  file:
    path: /etc/apache2/sites-enabled/000-default.conf
    state: absent

- name: Write webhop-default.conf
  template:
    src: webhop-default.conf.j2
    dest: /etc/apache2/sites-available/webhop-default.conf

- name: Copy the service status script into webroot
  template:
    src: se4-service-config.php.j2
    dest: "{{ docroot }}/se4.php"
    owner: www-data
    group: www-data
    mode: 0700

- name: Copy the healthcheck script into the webroot
  copy:
    src: files/ping.php
    dest: "{{ docroot }}/ping.php"
    owner: www-data
    group: www-data
    mode: 0700

- name: Disable the pagespeed module
  apache2_module: state=absent name=pagespeed
  when: not enable_pagespeed

- name: Symlink sites-available/webhop-default.conf to sites-enabled/webhop-default.conf
  file:
    src: /etc/apache2/sites-available/webhop-default.conf
    dest: /etc/apache2/sites-enabled/webhop-default.conf
    state: link

- name: Stop apache2 service
  service:
    name: apache2
    state: stopped
  ignore_errors: true

# Pagespeed module is failing on apt-cache update just after upgrading to Ubuntu 18.04
# bodging in a fix from https://support.plesk.com/hc/en-us/articles/360021566754--apt-update-is-not-working-on-Plesk-server-with-Ubuntu-or-Debian-after-installing-PageSpeed-Apache-module-through-Google-PageSpeed-Insights-extension-The-repository-http-dl-google-com-linux-mod-pagespeed-deb-stable-Release-is-not-signed

- name: Check pagespeed repo file exists
  stat: path=/etc/apt/sources.list.d/mod-pagespeed.list
  register: ps_apt_stat

- name: Moving out pagespeed repo
  command: mv /etc/apt/sources.list.d/mod-pagespeed.list /tmp/
  when: ps_apt_stat.stat.exists

- name: Update the apt-cache to remove pagespeed apt from cache
  apt: update_cache=yes cache_valid_time=3600

#- name: Moving pagespeed repo back in ready for the update
#  command: mv /tmp/mod-pagespeed.list /etc/apt/sources.list.d/

# End of bodge

- name: Apply all Ubuntu security updates
  command: /usr/bin/unattended-upgrade
  when: not skip_security_updates|default(False)
  
- name: Disable server version leak
  lineinfile:
    dest: /etc/apache2/conf-available/security.conf
    line: "ServerTokens prod"

- name: Disable server signature leak
  lineinfile:
    dest: /etc/apache2/conf-available/security.conf
    line: "ServerSignature off"

- include: logging.yml
  when: enable_logging

- include: pagespeed.yml
  when: enable_pagespeed
